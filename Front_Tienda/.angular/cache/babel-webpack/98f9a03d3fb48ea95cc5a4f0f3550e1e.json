{"ast":null,"code":"import _classCallCheck from \"/home/cahp/Documentos/Ciclo_4/Front/Front_Tienda/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cahp/Documentos/Ciclo_4/Front/Front_Tienda/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { ElementRef } from \"@angular/core\";\nimport { ROUTES } from \"../sidebar/sidebar.component\";\nimport { Location } from \"@angular/common\";\nimport { Router } from \"@angular/router\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ng-bootstrap/ng-bootstrap\";\nexport var NavbarComponent = /*#__PURE__*/(function () {\n  var NavbarComponent = /*#__PURE__*/function () {\n    function NavbarComponent(location, element, router) {\n      var _this = this;\n\n      _classCallCheck(this, NavbarComponent);\n\n      this.element = element;\n      this.router = router;\n      this.mobile_menu_visible = 0;\n      this.isCollapsed = true; // function that adds color white/transparent to the navbar on resize (this is for the collapse)\n\n      this.updateColor = function () {\n        var navbar = document.getElementsByClassName('navbar')[0];\n\n        if (window.innerWidth < 993 && !_this.isCollapsed) {\n          navbar.classList.add('bg-white');\n          navbar.classList.remove('navbar-transparent');\n        } else {\n          navbar.classList.remove('bg-white');\n          navbar.classList.add('navbar-transparent');\n        }\n      };\n\n      this.location = location;\n      this.sidebarVisible = false;\n    }\n\n    _createClass(NavbarComponent, [{\n      key: \"ngOnInit\",\n      value: function ngOnInit() {\n        var _this2 = this;\n\n        window.addEventListener(\"resize\", this.updateColor);\n        this.listTitles = ROUTES.filter(function (listTitle) {\n          return listTitle;\n        });\n        var navbar = this.element.nativeElement;\n        this.toggleButton = navbar.getElementsByClassName(\"navbar-toggler\")[0];\n        this.router.events.subscribe(function (event) {\n          _this2.sidebarClose();\n\n          var $layer = document.getElementsByClassName(\"close-layer\")[0];\n\n          if ($layer) {\n            $layer.remove();\n            _this2.mobile_menu_visible = 0;\n          }\n        });\n      }\n    }, {\n      key: \"sidebarOpen\",\n      value: function sidebarOpen() {\n        var toggleButton = this.toggleButton;\n        var mainPanel = document.getElementsByClassName(\"main-panel\")[0];\n        var html = document.getElementsByTagName(\"html\")[0];\n\n        if (window.innerWidth < 991) {\n          mainPanel.style.position = \"fixed\";\n        }\n\n        setTimeout(function () {\n          toggleButton.classList.add(\"toggled\");\n        }, 500);\n        html.classList.add(\"nav-open\");\n        this.sidebarVisible = true;\n      }\n    }, {\n      key: \"sidebarClose\",\n      value: function sidebarClose() {\n        var html = document.getElementsByTagName(\"html\")[0];\n        this.toggleButton.classList.remove(\"toggled\");\n        var mainPanel = document.getElementsByClassName(\"main-panel\")[0];\n\n        if (window.innerWidth < 991) {\n          setTimeout(function () {\n            mainPanel.style.position = \"\";\n          }, 500);\n        }\n\n        this.sidebarVisible = false;\n        html.classList.remove(\"nav-open\");\n      }\n    }, {\n      key: \"sidebarToggle\",\n      value: function sidebarToggle() {\n        // const toggleButton = this.toggleButton;\n        // const html = document.getElementsByTagName('html')[0];\n        var $toggle = document.getElementsByClassName(\"navbar-toggler\")[0];\n\n        if (this.sidebarVisible === false) {\n          this.sidebarOpen();\n        } else {\n          this.sidebarClose();\n        }\n\n        var html = document.getElementsByTagName(\"html\")[0];\n\n        if (this.mobile_menu_visible == 1) {\n          // $('html').removeClass('nav-open');\n          html.classList.remove(\"nav-open\");\n\n          if ($layer) {\n            $layer.remove();\n          }\n\n          setTimeout(function () {\n            $toggle.classList.remove(\"toggled\");\n          }, 400);\n          this.mobile_menu_visible = 0;\n        } else {\n          setTimeout(function () {\n            $toggle.classList.add(\"toggled\");\n          }, 430);\n          var $layer = document.createElement(\"div\");\n          $layer.setAttribute(\"class\", \"close-layer\");\n\n          if (html.querySelectorAll(\".main-panel\")) {\n            document.getElementsByClassName(\"main-panel\")[0].appendChild($layer);\n          } else if (html.classList.contains(\"off-canvas-sidebar\")) {\n            document.getElementsByClassName(\"wrapper-full-page\")[0].appendChild($layer);\n          }\n\n          setTimeout(function () {\n            $layer.classList.add(\"visible\");\n          }, 100);\n\n          $layer.onclick = function () {\n            //asign a function\n            html.classList.remove(\"nav-open\");\n            this.mobile_menu_visible = 0;\n            $layer.classList.remove(\"visible\");\n            setTimeout(function () {\n              $layer.remove();\n              $toggle.classList.remove(\"toggled\");\n            }, 400);\n          }.bind(this);\n\n          html.classList.add(\"nav-open\");\n          this.mobile_menu_visible = 1;\n        }\n      }\n    }, {\n      key: \"getTitle\",\n      value: function getTitle() {\n        var titlee = this.location.prepareExternalUrl(this.location.path());\n\n        if (titlee.charAt(0) === \"#\") {\n          titlee = titlee.slice(1);\n        }\n\n        for (var item = 0; item < this.listTitles.length; item++) {\n          if (this.listTitles[item].path === titlee) {\n            return this.listTitles[item].title;\n          }\n        }\n\n        return \"Tienda los tiburones\";\n      }\n    }, {\n      key: \"ngOnDestroy\",\n      value: function ngOnDestroy() {\n        window.removeEventListener(\"resize\", this.updateColor);\n      }\n    }]);\n\n    return NavbarComponent;\n  }();\n\n  NavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n    return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.Location), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  NavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NavbarComponent,\n    selectors: [[\"app-navbar\"]],\n    decls: 10,\n    vars: 1,\n    consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-absolute\", \"navbar-transparent\"], [1, \"container-fluid\"], [1, \"navbar-wrapper\"], [1, \"navbar-toggle\", \"d-inline\"], [\"type\", \"button\", 1, \"navbar-toggler\", 3, \"click\"], [1, \"navbar-toggler-bar\", \"bar1\"], [1, \"navbar-toggler-bar\", \"bar2\"], [1, \"navbar-toggler-bar\", \"bar3\"], [\"href\", \"javascript:void(0)\", 1, \"navbar-brand\", \"mt-3\"]],\n    template: function NavbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"nav\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function NavbarComponent_Template_button_click_4_listener() {\n          return ctx.sidebarToggle();\n        });\n        i0.ɵɵelement(5, \"span\", 5);\n        i0.ɵɵelement(6, \"span\", 6);\n        i0.ɵɵelement(7, \"span\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"a\", 8);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate1(\" \", ctx.getTitle(), \" \");\n      }\n    },\n    directives: [i3.NgbNavbar],\n    styles: [\"\"]\n  });\n  return NavbarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}